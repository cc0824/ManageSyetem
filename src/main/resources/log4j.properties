# log4j.rootLogger配置日志输出级别(debug)、类型(多个类型之间用逗号分割,DEBUG<INFO<WARN<ERROR)
log4j.rootLogger=DEBUG,stdout,D,E
log.path=D://Eclipse_Workspace//SSM-PMS//logs
#############################
# 1.直接输出到控制台
#############################

# 配置stdout输出到控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
# 配置stdout输出warn级别以上的日志 
log4j.appender.stdout.Threshold =WARN 
# 配置stdout设置为自定义布局模式
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout 
# 配置stdout日志的输出格式  2019-08-22 22:52:12 %r耗费毫秒数 %p日志的优先级 %t线程名 %C所属类名通常为全类名 %L代码中的行号 %x线程相关联的NDC %m日志 %n换行
log4j.appender.stdout.layout.ConversionPattern= %d{yyyy-MM-dd HH:mm:ss} - %-4r %-5p [%t] %C:%L %x - %m%n

#############################
# 2.输出debug及以上级别到log日志文件中
#############################

# 配置输出到文件中 文件大小到达指定尺寸的时候产生新的日志文件
log4j.appender.D=org.apache.log4j.RollingFileAppender
# 保存编码格式
log4j.appender.D.Encoding=UTF-8
# 输出文件位置此为项目根目录下的logs文件夹中
log4j.appender.D.File=${log.path}//log.log
# 后缀可以是KB,MB,GB达到该大小后创建新的日志文件
log4j.appender.D.MaxFileSize=10MB
# 设置滚动文件的最大值3 指可以产生root.log.1、root.log.2、root.log.3和root.log四个日志文件
log4j.appender.D.MaxBackupIndex=3  
# 配置为自定义布局模式
log4j.appender.D.layout=org.apache.log4j.PatternLayout
# %F文件名称,%p日志优先级,%m具体日志信息,%n回车换行符
log4j.appender.D.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} - %-4r %-5p [%t] %C:%L %x - %m%n

#############################
# 3.输出error及以上级别到error日志文件中
#############################

# 配置输出到文件中 文件大小到达指定尺寸的时候产生新的日志文件
log4j.appender.E=org.apache.log4j.RollingFileAppender
log4j.appender.E.Threshold =ERROR
# 保存编码格式
log4j.appender.E.Encoding=UTF-8
# 输出文件位置此为项目根目录下的logs文件夹中
log4j.appender.E.File=${log.path}//error.log
# 后缀可以是KB,MB,GB达到该大小后创建新的日志文件
log4j.appender.E.MaxFileSize=10MB
# 设置滚动文件的最大值3 指可以产生root.log.1、root.log.2、root.log.3和root.log四个日志文件
log4j.appender.E.MaxBackupIndex=3  
# 配置为自定义布局模式
log4j.appender.E.layout=org.apache.log4j.PatternLayout
# %F文件名称,%p日志优先级,%m具体日志信息,%n回车换行符
log4j.appender.E.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} - %-4r %-5p [%t] %C:%L %x - %m%n

#############################
# 4.设置package输出级别:log4j.logger.packageName=level
#############################

log4j.logger.org.apache=INFO
log4j.logger.java.sql=DEBUG
log4j.logger.java.sql.ResultSet=INFO
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG

#############################
# 5.对不同的类输出不同的日志文件
#############################

# controller文件(被WebLogAspect拦截)日志单独输出
log4j.logger.com.cc.pms.component.WebLogAspect=INFO,C
log4j.additivity.com.cc.pms.component.WebLogAspect=false
log4j.appender.C=org.apache.log4j.RollingFileAppender
log4j.appender.C.Encoding=UTF-8
log4j.appender.C.File=${log.path}//controller.log
log4j.appender.C.MaxFileSize=10MB
log4j.appender.C.MaxBackupIndex=3  
log4j.appender.C.layout=org.apache.log4j.PatternLayout
log4j.appender.C.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} - %-4r %-5p [%t] %C:%L %x - %m%n



