<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="
		http://www.springframework.org/schema/jee 
		http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/websocket
        http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd">

	<!-- ============================================== -->
	<!-- == 此文件为Spring的配置文件,这里主要配置和业务逻辑有关的 == -->
	<!-- ============================================== -->


	<!-- spring容器扫描业务逻辑组件，不包括控制器，springmvc只扫描控制器 -->
	<context:component-scan base-package="com.cc" >
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 导入spring-elastic配置文件 -->
	<import resource="spring-elastic.xml"/>



	<!-- ============================================== -->
	<!-- ================== 数据源 ===================== -->
	<!-- ============================================== -->
	<bean id="pooledDataSource"
		class="com.alibaba.druid.pool.DruidDataSource">
		<property name="url" value="jdbc:sqlserver://localhost:1433;DatabaseName=db_mansystem"/>
		<property name="username" value="sa"/>
		<property name="password" value="0824"/>
	</bean>



	<!-- ============================================== -->
	<!-- == 配置和MyBatis的整合，mybatisconfig.xml内容可以放在下面，不单独拿出去 === -->
	<!-- ============================================== -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定mybatis全局配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 指定数据源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
		<!-- 指定mybatis，mapper文件的位置 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
		
	<!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--扫描所有dao接口的实现，加入到ioc容器中 -->
		<property name="basePackage" value="com.cc.pms.dao"></property>
	</bean>

	<!-- 配置一个可以执行批量的sqlSession -->
	<!-- value="BATCH"该配置会无法获取insert、update返回的行数 ，需要value="SIMPLE"才行-->
<!-- 	<bean id="sqlSession" -->
<!-- 		class="org.mybatis.spring.SqlSessionTemplate"> -->
<!-- 		<constructor-arg name="sqlSessionFactory" -->
<!-- 			ref="sqlSessionFactory"></constructor-arg> -->
<!-- 		<constructor-arg name="executorType" value="BATCH"></constructor-arg> -->
<!-- 	</bean> -->

	
	<!-- ============================================== -->
	<!-- ================ 事务控制的配置 ================ -->
	<!-- ============================================== -->
	
	<!-- 配置事务管理器，切入点表达式，切入事物后该怎么办：事务增强 -->
	<!-- 事务增强默认值为transactionManager -->
	<!-- 如果事务管理器id变化，需要在事务增强里修改相关值 -->
	<!-- ============================================== -->
	<!-- 事务管理器 对数据进行操作 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!--控制住数据源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	
	<!--开启基于注解的事务，使用xml配置形式的事务（必要主要的都是使用配置式） -->
	<!-- 通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller -->
	<aop:config>
		<!-- 切入点表达式 “..”表示目录下还有子目录也行 -->
		<aop:pointcut
			expression="execution(* com.cc.pms.service.*.*(..))" id="txPoint" />
		<!-- 配置事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>
	
	<!-- 使用spingaop实现日志记录功能 -->
	<!-- 启动AOP AspectJ注解自动代理 -->
<!-- 	<aop:aspectj-autoproxy expose-proxy="true" proxy-target-class="true"></aop:aspectj-autoproxy> -->
	

	<!--配置事务增强，事务如何切入 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 所有方法都是事务方法 -->
			<tx:method name="*" read-only="true" propagation="REQUIRED"/>
			<!-- 设置为只读（查询）的事务方法 -->
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="select*" propagation="REQUIRED" read-only="true" />
			<!-- 设置为增删改的事务方法 -->
            <tx:method name="insert*" propagation="REQUIRED"/> 
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>  
            <tx:method name="delete*" propagation="REQUIRED"/> 
            <tx:method name="save*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>

	<!-- ============================================== -->
	<!-- 备注：Spring配置文件的核心点（数据源、与mybatis的整合，事务控制） -->
	<!-- ============================================== -->
	
</beans>
